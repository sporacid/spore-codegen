name: Continuous Integration
on:
  pull_request:
  push:
    branches:
      - main
permissions:
  contents: write
jobs:
  build:
    name: Build Project
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Install Dependencies
        run: |
          sudo apt-get -qq update &&
          sudo apt-get install -y build-essential libtbb-dev ninja-build
      - name: Install LLVM
        run: |
          wget https://apt.llvm.org/llvm.sh &&
          chmod u+x llvm.sh &&
          sudo ./llvm.sh 18 all &&
          sudo update-alternatives --install /usr/bin/cc cc /usr/bin/clang-18 100 &&
          sudo update-alternatives --install /usr/bin/c++ c++ /usr/bin/clang++-18 100 &&
          echo /usr/lib/llvm-18 >> $GITHUB_PATH
      - name: Install CMake
        uses: lukka/get-cmake@latest
      - name: Install Vcpkg
        uses: lukka/run-vcpkg@v11
        with:
          vcpkgGitCommitId: '3508985146f1b1d248c67ead13f8f54be5b4f5da'
      - name: Run CMake
        uses: lukka/run-cmake@v10
        with:
          configurePreset: 'ninja-vcpkg'
          buildPreset: 'ninja-vcpkg-release'
          testPreset: 'ninja-vcpkg-test-release'
          testPresetAdditionalArgs: "['--no-tests=error','--output-on-failure','--verbose']"
      - name: Tag Version
        if: github.ref == 'refs/heads/main'
        run: |
          git config user.name "${GITHUB_ACTOR}" &&
          git config user.email "${GITHUB_ACTOR}@users.noreply.github.com" &&
          VERSION=$(bash .github/scripts/get_version.sh) &&
          $(echo -n $VERSION > VERSION) &&
          git checkout -B releases/v${VERSION%.*.*} &&
          git add VERSION &&
          git commit -m "chore: Update version to v$VERSION" &&
          git tag -af v$VERSION -m "Auto-generated semantic tag v$VERSION" &&
          git push --set-upstream origin releases/v${VERSION%.*.*} --force &&
          git push origin v$VERSION --force
