function(spore_codegen SPORE_TARGET_NAME)
  cmake_parse_arguments(
    "SPORE_CODEGEN"
    "FORCE;DEBUG;"
    "CONFIG;CACHE;TARGET_NAME;BIN_NAME;REFORMAT;WORKING_DIRECTORY;"
    "USER_DATA;TEMPLATES;ADDITIONAL_ARGS"
    ${ARGN}
  )

  if (NOT SPORE_CODEGEN_BIN_NAME)
    set(SPORE_CODEGEN_BIN_NAME $<TARGET_FILE:${SPORE_CODEGEN_BINARY_TARGET}>)
  endif ()

  if (NOT SPORE_CODEGEN_TARGET_NAME)
    set(SPORE_CODEGEN_TARGET_NAME "${SPORE_TARGET_NAME}-codegen")
  endif ()

  if (NOT SPORE_CODEGEN_REFORMAT)
    find_package(ClangFormat)
    if (CLANG_FORMAT_FOUND)
      set(SPORE_CODEGEN_REFORMAT "${CLANG_FORMAT_EXECUTABLE} -i")
    else ()
      set(SPORE_CODEGEN_REFORMAT "false")
    endif ()
  endif ()

  if (NOT SPORE_CODEGEN_WORKING_DIRECTORY)
    set(SPORE_CODEGEN_WORKING_DIRECTORY $<TARGET_PROPERTY:${SPORE_TARGET_NAME},SOURCE_DIR>)
  endif ()

  set(
    SPORE_CODEGEN_CXX_STANDARD
      $<TARGET_PROPERTY:${SPORE_TARGET_NAME},CXX_STANDARD>
  )

  set(
    SPORE_CODEGEN_INCLUDES
      $<TARGET_PROPERTY:${SPORE_TARGET_NAME},INCLUDE_DIRECTORIES>
      $<TARGET_PROPERTY:${SPORE_TARGET_NAME},INTERFACE_INCLUDE_DIRECTORIES>
  )

  set(
    SPORE_CODEGEN_SYSTEM_INCLUDES
      $<TARGET_PROPERTY:${SPORE_TARGET_NAME},SYSTEM_INCLUDE_DIRECTORIES>
      $<TARGET_PROPERTY:${SPORE_TARGET_NAME},INTERFACE_SYSTEM_INCLUDE_DIRECTORIES>
  )

  set(
    SPORE_CODEGEN_DEFINITIONS
      SPORE_CODEGEN=1
      $<TARGET_PROPERTY:${SPORE_TARGET_NAME},COMPILE_DEFINITIONS>
      $<TARGET_PROPERTY:${SPORE_TARGET_NAME},INTERFACE_COMPILE_DEFINITIONS>
  )

  if (CMAKE_CXX_COMPILER_ID STREQUAL "Clang" OR CMAKE_CXX_COMPILER_ID STREQUAL "GNU")
    list(
      APPEND SPORE_CODEGEN_ADDITIONAL_ARGS
        ${CMAKE_CXX_FLAGS}
    )
  endif ()

  add_custom_target(
    ${SPORE_CODEGEN_TARGET_NAME}
    COMMAND
      ${SPORE_CODEGEN_BIN_NAME}
      "$<$<BOOL:${SPORE_CODEGEN_CONFIG}>:--config;${SPORE_CODEGEN_CONFIG};>"
      "$<$<BOOL:${SPORE_CODEGEN_CACHE}>:--cache;${SPORE_CODEGEN_CACHE};>"
      "$<$<BOOL:${SPORE_CODEGEN_REFORMAT}>:--reformat;${SPORE_CODEGEN_REFORMAT};>"
      "$<$<BOOL:${SPORE_CODEGEN_FORCE}>:--force;>"
      "$<$<BOOL:${SPORE_CODEGEN_DEBUG}>:--debug;>"
      "$<$<BOOL:$<FILTER:${SPORE_CODEGEN_TEMPLATES},EXCLUDE,^$>>:--templates;$<JOIN:${SPORE_CODEGEN_TEMPLATES},;--templates;>>"
      "$<$<BOOL:$<FILTER:${SPORE_CODEGEN_USER_DATA},EXCLUDE,^$>>:--user-data;$<JOIN:${SPORE_CODEGEN_USER_DATA},;--user-data;>>"
      "$<$<BOOL:${SPORE_CODEGEN_CXX_STANDARD}>:--cpp:-std=c++${SPORE_CODEGEN_CXX_STANDARD}>"
      "$<$<BOOL:$<FILTER:${SPORE_CODEGEN_INCLUDES},EXCLUDE,^$>>:--cpp:-I$<JOIN:${SPORE_CODEGEN_INCLUDES},;--cpp:-I>>"
      "$<$<BOOL:$<FILTER:${SPORE_CODEGEN_SYSTEM_INCLUDES},EXCLUDE,^$>>:--cpp:-isystem$<JOIN:${SPORE_CODEGEN_SYSTEM_INCLUDES},;--cpp:-isystem>>"
      "$<$<BOOL:$<FILTER:${SPORE_CODEGEN_DEFINITIONS},EXCLUDE,^$>>:--cpp:-D$<JOIN:${SPORE_CODEGEN_DEFINITIONS},;--cpp:-D>>"
      "$<$<BOOL:${SPORE_CODEGEN_ADDITIONAL_ARGS}>:$<JOIN:${SPORE_CODEGEN_ADDITIONAL_ARGS},;>>"
    COMMENT "Running codegen for ${SPORE_TARGET_NAME} with ${SPORE_CODEGEN_CONFIG}"
    WORKING_DIRECTORY "${SPORE_CODEGEN_WORKING_DIRECTORY}"
    COMMAND_EXPAND_LISTS
    VERBATIM
  )

  add_dependencies(
    ${SPORE_TARGET_NAME}
    ${SPORE_CODEGEN_TARGET_NAME}
  )
endfunction()
